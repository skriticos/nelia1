~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           README ~ MILESTONE CONTROL
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Aim of this standalone is to trace and fix the problem with the MPushButton not
properly switching to completed milestones (ignores switches to these versions).

During the setup of this standalone, it became aparent that all milestone
operations should be consolidated in a unified module. This is partly required
to clean up the code structure a bit and partly to have a reusable control that
can be used for followup projects.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This standalone will first create a few placeholder control structures to
manipulate the milestone (gui) and then fill in the gaps.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TODO:
1. rename MPushButton →  MilestoneControl  ✓
2. MilestoneControl should set the selected milestone dc.sp.m.selected  ✓
3. implement milestone item methods
   a, add_milestone_item ✓
   b, close_milestone_item
   c, delete_milestone_item
   d, move_milestone_item
   e, edit_milestone_item
4. move milestone tree update to MilestoneControl
5. add slot that reacts to milestone item change
6. test sequence for milestone manipulation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dc.ui.v.xx_add_feature
dc.ui.v.xx_add_issue
dc.ui.v.xx_close_feature
dc.ui.v.xx_close_issue
dc.ui.v.xx_debug            # debug output
dc.ui.v.xx_delete_feature
dc.ui.v.xx_delete_issue
dc.ui.v.xx_move_feature
dc.ui.v.xx_move_issue
dc.ui.v.xx_move_target      # milestone move mpushbutton
dc.ui.v.xx_run_sequence
dc.ui.v.xx_selection        # current milestone selection mpushbutton
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

