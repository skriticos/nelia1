.. enableEditCallbacks

dc.ui.roadmap.v.line_mi_name.textChanged.connect(dc.m.roadmap.v.onNameChanged)
dc.ui.roadmap.v.cb_mi_priority.setValue.convert(dc.m.roadmap.v.onPriorityChanged)
dc.ui.roadmap.v.cb_mi_category.setValue.convert(dc.m.roadmap.v.onCategoryChanged)

.. disableEditCallbacks

dc.ui.roadmap.v.line_mi_name.textChanged.disconnect(dc.m.roadmap.v.onNameChanged)
dc.ui.roadmap.v.cb_mi_priority.setValue.convert(dc.m.roadmap.v.onPriorityChanged)
dc.ui.roadmap.v.cb_mi_category.setValue.convert(dc.m.roadmap.v.onCategoryChanged)

.. NxRoadmap

@logger('NxRoadmap.touchRoadmap(self)', 'self')
def touchRoadmap(self):

    timestamp = int(time.time())
    smiid = dc.x.roadmap.smiid.v
    dc.sp.m.mi._(smiid).modified.v = timestamp
    x = convert(timestamp)
    setTableValue('roadmap', milist.colModified, x)
    dc.m.project.v.touchProject()

@logger('NxRoadmap.onNameChanged(self, name)', 'self', 'name')
def onNameChanged(self, name):

    smiid = dc.x.roadmap.smiid.v
    dc.sp.m.mi._(smiid).name.v = name
    setTableValue('roadmap', milist.colName, name)
    self.touchRoadmap()

    if not dc.auto.v:
        dc.x.roadmap.changeflag.name.v = True

@logger('NxRoadmap.onPriorityChanged(self, priority)', 'self', 'priority')
def onPriorityChanged(self, priority):

    smiid = dc.x.roadmap.smiid.v
    dc.sp.m.mi._(smiid).priority.v = priority
    setTableValue('roadmap', milist.colPritoriy, priority)
    self.touchRoadmap()

    if not dc.auto.v:
        dc.x.roadmap.changeflag.priority.v = True

@logger('NxRoadmap.onCategoryChanged(self, category)', 'self', 'category')
def onCategoryChanged(self, category):

    smiid = dc.x.roadmap.smiid.v
    dc.sp.m.mi._(smiid).category.v = category
    setTableValue('roadmap', milist.colCategory, category)
    self.touchRoadmap()

    if not dc.auto.v:
        dc.x.roadmap.changeflag.category.v = True


