..

.. get entry pointer
.. remove entry
.. update table
.. write log
.. update mistnavi

dc.ui.roadmap.v.btn_mi_delete.clicked.connect(dc.m.roadmap.v.onDeleteMilestoneItem)

..

@logger('NxRoadmap.onDeleteMilestoneItem(self)', 'self')
def onDeleteMilestoneItem(self):

    smiid = dc.x.roadmap.smiid.v

    dc.m.log.v.addAutoLog('Milestone', 'Milestone item {} deleted'.format(smiid),
                          'Milestone item {} - "{}" has been deleted in milestone v{}.{}.'.format(
                          smiid, dc.sp.m.mi._(smiid).name.v, dc.sp.m.selected.v[0], dc.sp.m.selected.v[1]))

    major, minor = dc.sp.m.selected.v
    dc.sp.m._(major)._(minor).index.v.discard(smiid)
    del dc.sp.m.mi.__dict__['_{}'.format(smiid)]
    dc.m.project.v.touchProject()
    dc.x.roadmap.smiid.v = 0
    milist.reloadTable()

    # STUB: update mistnavi


